name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn -B test

      - name: Generate test coverage report
        run: mvn verify

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-report
          path: target/site/jacoco/
          
      # Add this step to make the JAR available for the Docker job
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn -B verify sonar:sonar
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.scanner.force-ci-analysis=true
        continue-on-error: true

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [build, sonarcloud]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      
      # Download the JAR file that was built in the build job
      - name: Download JAR
        uses: actions/download-artifact@v5
        with:
          name: app-jar
          path: app
      
      # List the contents to confirm the JAR exists
      - name: List downloaded files
        run: ls -la app/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kenzycodex/distributed-storage:latest,kenzycodex/distributed-storage:${{ github.sha }}
          # Add build args to specify the JAR location
          build-args: |
            JAR_FILE=app/*.jar
