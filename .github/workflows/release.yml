name: Release

on:
  push:
    tags:
      - 'v*'

env:
  JAVA_VERSION: '17'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Build Load Balancer
        run: mvn clean package -DskipTests

      - name: Build Storage Node
        run: |
          cd storage-node
          mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and Push Load Balancer
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            kenzycodex/distributed-storage-loadbalancer:${{ steps.version.outputs.version }}
            kenzycodex/distributed-storage-loadbalancer:latest
          build-args: |
            JAR_FILE=target/*.jar

      - name: Build and Push Storage Node
        uses: docker/build-push-action@v5
        with:
          context: ./storage-node
          file: ./storage-node/Dockerfile
          push: true
          tags: |
            kenzycodex/distributed-storage-storagenode:${{ steps.version.outputs.version }}
            kenzycodex/distributed-storage-storagenode:latest
          build-args: |
            JAR_FILE=target/*.jar

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## DistributedStorage ${{ steps.version.outputs.version }}

            ### What's New

            Check the [CHANGELOG](CHANGELOG.md) for detailed changes.

            ### Docker Images
            ```bash
            docker pull kenzycodex/distributed-storage-loadbalancer:${{ steps.version.outputs.version }}
            docker pull kenzycodex/distributed-storage-storagenode:${{ steps.version.outputs.version }}
            ```

            ### Quick Start
            ```bash
            git clone https://github.com/kenzycodex/distributed-storage.git
            cd distributed-storage
            git checkout ${{ steps.version.outputs.tag }}
            docker-compose up -d
            ```

            **Full Changelog**: https://github.com/kenzycodex/distributed-storage/compare/v${{ steps.version.outputs.version }}...HEAD
          draft: false
          prerelease: false

      - name: Upload Load Balancer JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/load-balancer-1.0-SNAPSHOT.jar
          asset_name: distributed-storage-loadbalancer-${{ steps.version.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Upload Storage Node JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: storage-node/target/storage-node-1.0-SNAPSHOT.jar
          asset_name: distributed-storage-storagenode-${{ steps.version.outputs.version }}.jar
          asset_content_type: application/java-archive